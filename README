rtl_433, turns your Realtek RTL2832 based DVB dongle into a 433.92MHz generic data receiver
======================================================================

Installation instructions:

cd rtl_433/
mkdir build
cd build
cmake ../
make
make install


Running:

./rtl_433 -h

rtl_433, an ISM band generic data receiver for RTL2832 based DVB-T receivers

Usage:	[-d device_index (default: 0)]
	[-g gain (default: 0 for auto)]
	[-a analyze mode, print a textual description of the signal]
	[-t signal auto save, use it together with analyze mode (-a -t)
	[-l change the detection level used to determine pulses (0-3200) default: 10000]
	[-f [-f...] receive frequency[s], default: 433920000 Hz]
	[-s samplerate (default: 250000 Hz)]
	[-S force sync output (default: async)]
	[-r read data from file instead of from a receiver]
	[-p ppm_error (default: 0)]
	[-r test file name (indata)]
	[-m test file mode (0 rtl_sdr data, 1 rtl_433 data)]
	[-D print debug info on event
	[-z override short value
	[-x override long value
	filename (a '-' dumps samples to stdout)


./rtl_433 -a will run in analyze mode and you will get a text log of the received signal.
./rtl_433 -a file_name will save the demodulated signal in a file, raw 8-bit pcm, at samplerate. This file can be examined in Audacity, et al.
./rtl_433 will run the software in receive mode. Only sensor data for supported devices will be decoded.

This branch contains plugins: when building with -DUSE_PLUGINS (now the default in src/CMakeLists.txt) the device callbacks
in rtl_433.c are disabled and the plugins in src/plugins are enabled. They should be installed using 'make install'
(the plugins are installed by default in /usr/local/lib/plugins), or alternatively you can provide '-P <plugin-dir>' as
a parameter. You can enable or disable plugins by simply moving the shared object files (libplugin_name.so) in and out of
the plugins directory.

For plugin developers: plugins can be added easily: the plugin function signature is still the same, just copy
src/plugin/plugin_single_template.c to plugin_<yourplugin>.c and add your device callback function just like you would do in rtl_433.c.
The comments in this file should guide you. Also add your plugin to  src/plugin/CMakeLists.txt (add_library and INSTALL_TARGETS).
If you can use your plugin function for multiple plugins (e.g. with different pulse width timings or a different PWM decoder)
then use plugin/plugin_multiple_template.c

The plugins will not yet work for Windows: this will be addressed in a future version when there is demand.

This software is mostly useable for developers right now.
